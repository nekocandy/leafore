generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Deeds {
  id          String        @id @unique
  name        String
  points      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  approved    Boolean       @default(true)
  DeedRewards DeedRewards[]
}

model DeedRewards {
  id        String   @id @unique
  name      String
  deedId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deed Deeds @relation(fields: [deedId], references: [id])
}

model Forum {
  id        String   @id @unique
  title     String
  username  String
  avatar    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
